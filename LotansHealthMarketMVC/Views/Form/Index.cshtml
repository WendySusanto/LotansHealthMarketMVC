@model IEnumerable<LotansHealthMarketMVC.Models.BranchModel>
@{
    ViewData["Title"] = "Form";
}

<div id="smartwizard">
    <ul class="nav">
        <li>
            <a class="nav-link" href="#step-1">
                Start
            </a>
        </li>
        <li>
            <a class="nav-link" href="#step-2">
                Sales Form
            </a>
        </li>
        <li>
            <a class="nav-link" href="#step-3">
                Payment Detail
            </a>
        </li>
        <li>
            <a class="nav-link" href="#step-4">
                Finish
            </a>
        </li>
    </ul>

    <div class="tab-content">
        <!-- <form action=""> -->
        <div id="step-1" class="tab-pane" role="tabpanel" style="min-height:500px">
            <div class="form-group d-flex align-items-center justify-content-between">

                <div class="d-flex align-items-center ">
                    <label class="mb-0 mr-3 control-label mr-2 font-weight-bold" for="transID">Transaction ID</label>
                    <div class="">
                        <input type="text" name="transID" class="form-control" value="LT001" disabled>
                    </div>
                </div>

                <div class="d-flex align-items-center ">
                    <label class="mb-0 mr-3 control-label mr-2 font-weight-bold" for="date">Date</label>
                    <div class="">
                        <input type="date" id="transDate" name="date" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" disabled>
                    </div>
                </div>
            </div>

            <div class="form-group ">
                <label class=" control-label font-weight-bold" for="branchLoc">Branch Location</label>
                <div class="">
                    <select id="branchloc" name="branchloc" onchange="updateSupervisor(this)" onfocus='this.size=3' class="form-control selectpicker" data-live-search="true">
                        @foreach (var item in Model)
                        {
                            <option value="@item.BranchID" onchange="updateSupervisor(this)">@item.BranchLocation</option>
                        }
                    </select>
                </div>
            </div>


            <div class="form-group ">
                <label class=" control-label font-weight-bold" for="cashierName">Cashier Name</label>
                <div class="">
                    <select name="cashierName" class="form-control" onfocus='this.size=3' data-live-search="true">
                        @*<option value="">Select Cashier's Name</option>*@
                    </select>
                </div>
            </div>

            <div class="form-group ">
                <label class=" control-label font-weight-bold" for="supervisorName">Supervisor Name</label>
                <div class="input-group mb-3">
                    <input type="text" name="supervisorName" class="form-control" placeholder="Supervisor's Name"
                           value="Select" disabled>
                </div>
            </div>
        </div>

        <div id="step-2" class="tab-pane" role="tabpanel">
            <label for="" class="font-weight-bold">Sales Summary</label>
            <div class="table-responsive">
                <table id="tableProduct" class="table table-bordered">
                    <thead>
                        <tr>
                            <th scope="col">No.</th>
                            <th scope="col">Item ID</th>
                            <th scope="col">Item Name</th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Subtotal</th>
                            <th scope="col">Action</th>
                        </tr>
                    </thead>

                    <tbody>
                        <tr id="noData">
                            <td colspan="6" class="text-center"><i>Currently no data to view</i></td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <th colspan="3">Total</th>
                            <td total-price colspan="3">0</td>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div class="form-group ">
                <label class=" control-label font-weight-bold" for="itemID">Item ID</label>
                <div class="input-group mb-3">
                    <input type="text" name="itemID" id="itemID" class="form-control">
                    <div class="input-group-append">
                        <button class="btn btn-info" type="button" id="buttonItem"><i class="fas fa-search"></i></button>
                    </div>
                </div>
            </div>


            <div class="form-group ">
                <label class=" control-label font-weight-bold" for="itemCat">Item Category</label>
                <div class="">
                    <select name="itemCat" class="form-control" onchange="updateItemNameListByCategory(this)" data-live-search="true">
                        <option value="">-Filter by Category-</option>
                    </select>
                </div>
            </div>


            <div class="form-group ">
                <label class=" control-label font-weight-bold" for="itemName">Item Name</label>
                <div class="">
                    <select name="itemName" class="form-control" data-live-search="true">
                        @*<option value="">Select Cashier's Name</option>*@
                    </select>
                </div>
            </div>


            <div class="form-group ">
                <label class=" control-label font-weight-bold" for="itemPrice">Item Price</label>
                <input type="text" name="itemPrice" class="form-control" disabled>
            </div>
            <div class="form-group ">
                <label class=" control-label font-weight-bold" for="qty">Quantity</label>
                <input type="number" name="qty" class="form-control">
            </div>

            <button class="btn btn-outline-info" onclick="appendProduct()">Add Product</button>
        </div>

        <div id="step-3" class="tab-pane" role="tabpanel">

            <h4>Payment Details</h4>
            <div class="d-flex align-items-center">
                <p class="mr-5" for="">Total</p>
                <p payment-total class="font-weight-bold">0</p>
                <input type="hidden" name="change" style="border:none; background:none; " id="price" value=0>
            </div>
            <div class="form-group ">
                <label class=" control-label font-weight-bold" for="payment">Payment Method</label>
                <div class="">
                    <select id="paymentName" name="paymentName" class="form-control ">
                    </select>
                </div>
            </div>

            <div class="form-group ">
                <label class="control-label font-weight-bold" for="paid">Amount Paid</label>
                <input type="text" name="paid" onkeyup="change(this.value);" onchange="change(this.value);" value="0" class="form-control">
                <div class="invalid-feedback amount-paid"></div>
            </div>
            <div class="form-group ">
                <label class=" control-label font-weight-bold" for="change">Change</label>
                <input type="text" class="form-control" id="change" disabled>
            </div>
            <button class="btn btn-info" onclick="addTransaction()">Submit</button>

        </div>

        <div id="step-4" class="tab-pane" role="tabpanel">
            <h2 class="text-center mb-3">Lotan's Health Market</h2>
            <div class="row">
                <div class="col-3">Transaction ID</div>
                <div class="col-3">: LT001</div>

                <div class="col-3">Date</div>
                <div class="col-3">: 14/01/2022</div>
            </div>
            <div class="row">
                <div class="col-3">Cashier Name</div>
                <div class="col-3">: Remigus Arjuna</div>
                <div class="col-3">Branch Location</div>
                <div class="col-3">: Alam Sutera</div>
            </div>
            <hr class="border border-dark">
            <div class="row">
                <div class="col-1">1 </div>
                <div class="col-8">HEVIT-C 1000mg 10s</div>
                <div class="col-3">Rp. 13.600</div>
            </div>
            <div class="row">
                <div class="col-1">1 </div>
                <div class="col-8">Fitkom Gummy Calcium X16Gr</div>
                <div class="col-3">Rp. 22.500</div>
            </div>

            <hr class="border border-dark">

            <div class="row">
                <div class="col-6">
                </div>
                <div class="col-3">Total</div>
                <div class="col-3"> Rp 36.000</div>
            </div>

            <div class="row">
                <div class="col-6">
                </div>
                <div class="col-3">Payment</div>
                <div class="col-3"> Cash</div>
            </div>

            <div class="row">
                <div class="col-6">
                </div>
                <div class="col-3">Amount Paid</div>
                <div class="col-3"> Rp 40.000</div>
            </div>
            
            <div class="row">
                <div class="col-6">
                </div>
                <div class="col-3">Change</div>
                <div class="col-3"> Rp. 3.900</div>
            </div>


            <button class="btn btn-info" id="complete">Complete</button>

        </div>
        <!-- </form> -->
    </div>
</div>

@section Scripts {
    <script>

            //$.fn.selectpicker.Constructor.BootstrapVersion = '4';

            $(document).ready(function () {
                GetAllCashierName();
                GetItemCategory();
                GetAllItemName();
            });

        function GetAllCashierName() {
            $.ajax({
                url: "/Form/GetAllCashierName",
                method: "POST",
                dataType: "json",
                error: function (e) {
                    alert('Failed to retrieve cashier name!');
                },
                complete: function (data) {
                    var obj = JSON.parse(data.responseText);
                    var length = Object.keys(obj.data).length;
                    for (var i = 0; i < length; i++) {
                        $('select[name="cashierName"]').append(new Option(obj.data[i].cashierName, obj.data[i].cashierID));
                    }

                    $('select[name="cashierName"]').selectpicker();

                }
            });
        }

        function updateSupervisor(element) {
            var branch_id = $(element).val();

            $.ajax({
                url: "/Form/GetSupervisorByBranch",
                method: "POST",
                dataType: "json",
                data: {
                    'branch_id': branch_id
                },
                error: function (e) {
                    alert('Supervisor not found!');
                },
                complete: function (data) {
                    var obj = JSON.parse(data.responseText);
                    $('input[name="supervisorName"]').val(obj.data);
                }
            })
        }

        function GetItemCategory() {
            $.ajax({
                url: "/Form/GetItemCategory",
                method: "POST",
                dataType: "json",
                error: function (e) {
                    alert('Failed to retrieve category list!');
                },
                complete: function (data) {
                    var obj = JSON.parse(data.responseText);
                    var length = Object.keys(obj.data).length;
                    for (var i = 0; i < length; i++) {
                        $('select[name="itemCat"]').append(new Option(obj.data[i].categoryName, obj.data[i].categoryID));
                    }

                    $('select[name="itemCat"]').selectpicker();

                }
            });
        }


        $("#buttonItem").click(function () {
            var item_id = $("#itemID").val();

            $.ajax({
                url: "/Form/GetItemDetail",
                method: "POST",
                dataType: "json",
                data: {
                    'item_id': item_id
                },
                error: function (data) {
                    alert('Item not found!');
                },
                complete: function (data) {
                    var obj = JSON.parse(data.responseText);
                    $('select[name="itemCat"]').val(obj.data.categoryID).change();
                    $('select[name="itemName"]').val(obj.data.itemID).change();
                    //$('input[name="itemPrice"]').val(obj.data.itemPrice);
                }
            })
        })

        function GetAllItemName() {
            $.ajax({
                url: "/Form/GetAllItemName",
                method: "POST",
                dataType: "json",
                error: function (e) {
                    alert('Failed to retrieve item name!');
                },
                complete: function (data) {
                    var obj = JSON.parse(data.responseText);
                    var length = Object.keys(obj.data).length;
                    for (var i = 0; i < length; i++) {
                        $('select[name="itemName"]').append(new Option(obj.data[i].itemName, obj.data[i].itemID));
                    }
                    $('select[name="itemName"]').val(obj.data[0].itemID).change();
                    $('select[name="itemName"]').selectpicker();

                }
            });
        }

        function updateItemNameListByCategory(element) {

            var category_id = $(element).val();
            //alert(category_id);

            $.ajax({
                url: "/Form/GetAllItemName",
                method: "POST",
                dataType: "json",
                async: false,
                data: {
                    'category_id': category_id
                },
                error: function (e) {
                    alert('Failed to retrieve item name!');
                },
                complete: function (data) {
                    $('select[name="itemName"]').empty();
                    var obj = JSON.parse(data.responseText);
                    var length = Object.keys(obj.data).length;
                    for (var i = 0; i < length; i++) {
                        $('select[name="itemName"]').append(new Option(obj.data[i].itemName, obj.data[i].itemID));
                    }
                    $('select[name="itemName"]').selectpicker('refresh');

                    $('select[name="itemName"]').val(obj.data[0].itemID).change();

                    $('select[name="itemName"]').selectpicker('refresh');

                }
            });
        }

        $('select[name="itemName"]').change(function () {
            var item_id = $('select[name="itemName"]').val();

            $.ajax({
                url: "/Form/GetItemPrice",
                method: "POST",
                dataType: "json",
                async: "false",
                data: {
                    'item_id': item_id
                },
                error: function (e) {
                    alert('Failed to get price!');
                },
                complete: function (data) {
                    var obj = JSON.parse(data.responseText);
                    $('input[name="itemPrice"]').val(obj.data);
                }
            });
        });

        function appendProduct() {
            //clear error tag
            var item_id = $('select[name="itemName"]').val();
            var item_name = $('select[name="itemName"]').find(":selected").text();
            var qty = $('input[name="qty"]').val();
            var price = $('input[name="itemPrice"]').val();
            var subtotal = qty * price;
            if ($('input[name="itemPrice"]').hasClass('is-invalid')) {
                $('input[name="itemPrice"]').removeClass('is-invalid');
            }
            if ($('select[name="itemName"]').hasClass('is-invalid')) {
                $('select[name="itemName"]').removeClass('is-invalid');
            }
            if ($('input[name="qty"]').hasClass('is-invalid')) {
                $('input[name="qty"]').removeClass('is-invalid');
            }
            //validate
            if (price == '' || price == undefined) {
                $('input[name="itemPrice"]').addClass('is-invalid');
                return;
            }
            if (item_name == '' || item_name == undefined) {
                $('select[name="itemName"]').addClass('is-invalid');
                return;
            }
            if (qty == '' || qty == undefined) {
                $('input[name="qty"]').addClass('is-invalid');
                return;
            }
            //find duplicate
            if ($('tbody tr[item-id="' + item_id + '"]').length) {
                var row = $('tbody tr[item-id="' + item_id + '"]');
                var qtyInput = row.find('input[name=itemQty]');
                var finalQty = parseInt(qtyInput.val()) + parseInt(qty)
                qtyInput.val(finalQty);
                var thisRowSubtotal = row.find('td[sub-total]');
                thisRowSubtotal.text(getIdr(parseInt(finalQty) * parseInt(price)));
                updateTotalPrice(parseInt(qty) * parseInt(price));
            }
            else {
                //no duplicate make new row
                if ($('tbody #noData').length) {
                    $('tbody #noData').remove();
                }
                var index = $('tbody tr').length + 1;
                var html = '<tr item-id="' + item_id + '"><td scope = "col">' + index + '</td><td>' + item_id + '</td><td>' + item_name + '</td><td><input type="number" quantity name="itemQty" value="' + qty + '"disabled></td><td sub-total>' + getIdr(subtotal) + '</td><td><button onclick="deleteThisRow(this)" class="btn btn-danger"><i class="fas fa-trash mr-2"></i>Delete</button></td></tr>';
                $('#tableProduct tbody').append(html);
                updateTotalPrice(subtotal);
            }
        }

        function updateTotalPrice(subtotal) {
            var currentPrice = $('tfoot td[total-price]').text();
            currentPrice = unformatIdr(currentPrice);
            $('tfoot td[total-price]').text(getIdr(parseInt(currentPrice) + parseInt(subtotal)));
            $('p[payment-total]').text(getIdr(parseInt(currentPrice) + parseInt(subtotal)));
            $('input[name="change"]').val(parseInt(currentPrice) + parseInt(subtotal));
            $('input[name="paid"]').val(0).change();
        }

        function updateTotalPriceDelete(deletedPrice) {
            var currentPrice = $('tfoot td[total-price]').text();
            currentPrice = unformatIdr(currentPrice);
            $('tfoot td[total-price]').text(getIdr(parseInt(currentPrice) - parseInt(deletedPrice)));
            $('p[payment-total]').text(getIdr(parseInt(currentPrice) + parseInt(subtotal)));
            $('input[name="change"]').val(parseInt(currentPrice) + parseInt(subtotal));
            $('input[name="paid"]').val(0).change();
        }

        function deleteThisRow(element) {
            var thisRowSubTotal = $(element).closest('tr').find('td[sub-total]').text();
            updateTotalPriceDelete(unformatIdr(thisRowSubTotal));
            $(element).closest('tr').remove();
            if ($('tbody tr').length == 0) {
                var html = '<tr id="noData"><td colspan="6" class="text-center"><i>Currently no data to view</i></td></tr>'
                $('#tableProduct tbody').append(html);
            }
        }

        function getIdr(currency) {
            var idr = new Intl.NumberFormat("id-ID", { style: "currency", currency: "IDR", minimumFractionDigits: 0, maximumFractionDigits: 0, }).format(currency);
            return idr;
        }

        function unformatIdr(str) {
            return str.replace('Rp', '').replace(/\u00a0/g, '').replaceAll('.', '');
        }

        //step3

        $.ajax({
            url: "/Form/GetAllPaymentName",
            method: "POST",
            dataType: "json",
            error: function (e) {
                alert('Failed to retrieve payment name!');
            },
            complete: function (data) {
                console.log(data.responseText);
                var obj = JSON.parse(data.responseText);
                var length = Object.keys(obj.data).length;
                for (var i = 0; i < length; i++) {
                    $('select[name="paymentName"]').append(new Option(obj.data[i].paymentName, obj.data[i].paymentID));
                }
            }
        });

        function change(value) {
            var x;
            x = value - document.getElementById('price').value;//price ini id dari total pricenya nanti (blom bisa sekarang)
            document.getElementById('change').value = x;
        }

        function addTransaction() {
            //validate amount of paid
            $('.amount-paid').text('');
            $('input[name="paid"]').removeClass('is-invalid');
            if (document.getElementById('change').value < 0) {
                $('.amount-paid').text('The amount of money paid is not enough');
                $('input[name="paid"]').addClass('is-invalid');
            }
            else {
                //get all needed data
                var listProduct = [];
                var listProductQty = [];
                var paymentID = $('select[name="paymentName"]').val();
                var cashierID = $('select[name="cashierName"]').val();

                $('tbody tr[item-id]').each(function () {
                    var thisRowProductId = $(this).attr('item-id');
                    var thisRowProductQty = $(this).find('input[name="itemQty"]').val();
                    listProduct.push(thisRowProductId);
                    listProductQty.push(thisRowProductQty);
                });
                console.log(listProduct);
                console.log(listProductQty);
                console.log(paymentID);
                console.log(cashierID);
            }
        }

    </script>
}